vi /etc/sysconfig/network-scripts/ifcfg-ens33

hostnamectl set-hostname master

vi /etc/hosts
192.168.10.205 master
192.168.10.206 node1
192.168.10.207 node2

systemctl stop firewalld
systemctl disable firewalld
setenforce 0
 #sed -i "s/^SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config

swapoff -a
#sed -i 's/.*swap.*/#&/' /etc/fstab

vi /etc/sysctl.d/k8s.conf
 net.bridge.bridge-nf-call-ip6tables = 1
 net.bridge.bridge-nf-call-iptables = 1
sysctl --system


vi /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes Repo
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
gpgcheck=1
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
enabled=1


wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo
yum clean all && yum makecache

yum install -y yum-utils device-mapper-persistent-data lvm2



yum install -y docker
systemctl daemon-reload && systemctl enable docker && systemctl start docker

systemctl status -l docker


yum install kubeadm-1.15.2 kubectl-1.15.2 kubelet-1.15.2
systemctl enable kubelet

kubeadm init --kubernetes-version=1.15.2 --apiserver-advertise-address=192.168.10.205 --image-repository registry.aliyuncs.com/google_containers --pod-network-cidr=10.244.0.0/16
--service-cidr=10.1.0.0/16

#mkdir -p /root/.kube
#cp /etc/kubernetes/admin.conf /root/.kube/config
#kubectl get nodes
#kubectl get cs



kubectl get pod -n kube-system

.创建Pod以验证集群是否正常。在master创建
#kubectl create deployment nginx --image=nginx
#kubectl expose deployment nginx --port=80 --type=NodePort
#kubectl get pod,svc


node 节点
kubeadm join 192.168.10.205:6443 --token 687a4b.95oqf5pb7qxqy24j \
    --discovery-token-ca-cert-hash sha256:ba15afbe52024a506082a32c3f6716c38357b7793fdadf9e9b1fba48027a75d4 



 






xianbushuhao congjiedian

#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml

# systemctl daemon-reload
# systemctl start flanneld
# systemctl status -l flanneldls














kubeadm reset
systemctl stop kubelet
systemctl stop docker
rm -rf /var/lib/cni/
rm -rf /var/lib/kubelet/*
rm -rf /etc/cni/
ifconfig cni0 down
ifconfig flannel.1 down
ifconfig docker0 down
ip link delete cni0
ip link delete flannel
systemctl start docker






